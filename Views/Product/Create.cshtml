@model RoleBasedAuthanticationInMvc.Models.Product

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout1.cshtml";
}

<h2>Create</h2>

@using (Html.BeginForm("Create", "Product", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Product</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CatId, "CatId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("CatId", (IEnumerable<SelectListItem>)ViewBag.CategoryList, "--Select--", htmlAttributes: new { @class = "form-control", @onchange = "categoryChangefunc(this.value)" })
                @Html.ValidationMessageFor(model => model.CatId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ConId, "ConId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.DropDownList("ConId", null, htmlAttributes: new { @class = "form-control" })*@
                @Html.DropDownList("ConId", (IEnumerable<SelectListItem>)ViewBag.CountryList, "--Select--", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ConId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.StateId, "StateId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.DropDownList("StateId", null, htmlAttributes: new { @class = "form-control" })*@
                @if (ViewBag.StateSelectList != null)
                {

                    @Html.DropDownList("StateId", (IEnumerable<SelectListItem>)ViewBag.StateSelectList, (ViewBag.NewlegalEntity != null && ViewBag.NewlegalEntity != "") ? (object)new { @disabled = "disabled", @class = "form-control" } : new { @class = "form-control" })
                }
                else
                {
                    @Html.DropDownList("StateId", new SelectList(Enumerable.Empty<SelectListItem>(), "StateID", "StateName"), (ViewBag.NewlegalEntity != null && ViewBag.NewlegalEntity != "") ? (object)new { @disabled = "disabled", @class = "form-control" } : new { @class = "form-control" })
                }
                @Html.ValidationMessageFor(model => model.StateId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CityId, "CityId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.DropDownList("CityId", null, htmlAttributes: new { @class = "form-control" })*@
                @if (ViewBag.CitySelectList != null)
                {

                    @Html.DropDownList("CityId", (IEnumerable<SelectListItem>)ViewBag.CitySelectList, htmlAttributes: new { @class = "form-control" })
                }
                else
                {
                    @Html.DropDownList("CityId", new SelectList(Enumerable.Empty<SelectListItem>(), "CityId", "CityName"), (ViewBag.NewlegalEntity != null && ViewBag.NewlegalEntity != "") ? (object)new { @disabled = "disabled", @class = "form-control" } : new { @class = "form-control" })
                }
                @Html.ValidationMessageFor(model => model.CityId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Mobile, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Mobile, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Mobile, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Pincode, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Pincode, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Pincode, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Image, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="file" id="EventImagePost" title="Please upload JPG, JPEG, GIF,PNG or PDF format file upto 4MB." name="EventImagePost" />
                @*@Html.EditorFor(model => model.Image, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.ValidationMessageFor(model => model.Image, "", new { @class = "text-danger" })
            </div>
        </div>
        @*if(@Model.CatId == 1){*@
        <div id="hotel">
            <div class="form-group">
                @Html.LabelFor(model => model.CheckInDate, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.CheckInDate, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CheckInDate, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.CheckOutDate, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.CheckOutDate, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CheckOutDate, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.NoOfRoom, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.NoOfRoom, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.NoOfRoom, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        @*}
            else
            {*@
        <div id="Nothotel" style="display:none">
            <div class="form-group">
                @Html.LabelFor(model => model.ArrivingDate, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ArrivingDate, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ArrivingDate, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.DepartureDate, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.DepartureDate, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.DepartureDate, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.From, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.From, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.From, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.To, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.To, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.To, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.NoOfPeople, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NoOfPeople, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NoOfPeople, "", new { @class = "text-danger" })
            </div>
        </div>
        @*}*@
        <div class="form-group">
            @Html.LabelFor(model => model.Charges, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Charges, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Charges, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Descr, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Descr, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Descr, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

<script src="~/Scripts/jquery-3.4.1.min.js"></script>
<script type="text/javascript" src="https://ajax.googleapis.com/ajax/libs/jquery/1.8.3/jquery.min.js"></script>
<link rel="stylesheet" href="https://ajax.googleapis.com/ajax/libs/jqueryui/1.8.24/themes/start/jquery-ui.css" />
<script type="text/javascript" src="https://ajax.googleapis.com/ajax/libs/jqueryui/1.8.24/jquery-ui.min.js"></script>


<script type="text/javascript">
    function categoryChangefunc(val) {
        debugger;
        if (val == 1) {
            $("#hotel").show();
            $("#Nothotel").hide();
        }
        else {
            $("#Nothotel").show();
            $("#hotel").hide();
        }
    }
    $(document).ready(function () {
        $("#hotel").hide();
        $("#Nothotel").hide();


        $("#ConId").change(function () {
            debugger;
            var id = $(this).val();
            //  var countryName = $("#countryId").Text();

            $("#StateId").empty();
            $("#CityId").empty();
            $.get("FillState", { countryId: id }, function (data) {
                debugger;
                var v = "<option>---Select State---</option>";

                $.each(data, function (i, v1) {

                    v += "<option value=" + v1.Value + ">" + v1.Text + "</option>";

                });

                $("#StateId").html(v);

            });

        });



        $("#StateId").change(function () {

            var id = $(this).val();

            $("#CityId").empty();

            $.get("FillCity", { StateId: id }, function (data) {

                var v = "<option>---Select---</option>";

                $.each(data, function (i, v1) {

                    v += "<option value=" + v1.Value + ">" + v1.Text + "</option>";

                });

                $("#CityId").html(v);

            });

        });

    });

</script>


